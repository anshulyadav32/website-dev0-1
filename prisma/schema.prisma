// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String?
  passwordHash String? @map("password_hash")
  role        String   @default("user")
  avatarUrl   String?  @map("avatar_url")
  provider    String   @default("local")
  providerId  String?  @map("provider_id")
  isVerified  Boolean  @default(false) @map("is_verified")
  lastLogin   DateTime? @map("last_login")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model DnsRecord {
  id        Int      @id @default(autoincrement())
  domain    String
  recordType String  @map("record_type")
  ttl       Int
  value     String
  priority  Int?
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  monitoringHistory MonitoringHistory[]
  alerts           Alert[]

  @@map("dns_records")
}

model MonitoringHistory {
  id          Int      @id @default(autoincrement())
  dnsRecordId Int      @map("dns_record_id")
  status      String
  responseTime Int?    @map("response_time")
  checkedAt   DateTime @default(now()) @map("checked_at")

  // Relations
  dnsRecord DnsRecord @relation(fields: [dnsRecordId], references: [id], onDelete: Cascade)

  @@map("monitoring_history")
}

model Alert {
  id          Int       @id @default(autoincrement())
  dnsRecordId Int       @map("dns_record_id")
  alertType   String    @map("alert_type")
  message     String
  isResolved  Boolean   @default(false) @map("is_resolved")
  createdAt   DateTime  @default(now()) @map("created_at")
  resolvedAt  DateTime? @map("resolved_at")

  // Relations
  dnsRecord DnsRecord @relation(fields: [dnsRecordId], references: [id], onDelete: Cascade)

  @@map("alerts")
}

model Setting {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String?
  description String?
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("settings")
}

model Repository {
  id          Int      @id @default(autoincrement())
  name        String
  fullName    String   @map("full_name")
  description String?
  htmlUrl     String   @map("html_url")
  cloneUrl    String   @map("clone_url")
  language    String?
  stars       Int      @default(0)
  forks       Int      @default(0)
  watchers    Int      @default(0)
  openIssues  Int      @default(0) @map("open_issues")
  size        Int      @default(0)
  isPrivate   Boolean  @default(false) @map("is_private")
  isFork      Boolean  @default(false) @map("is_fork")
  isArchived  Boolean  @default(false) @map("is_archived")
  topics      String[] @default([])
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  pushedAt    DateTime? @map("pushed_at")
  lastCommit  String?  @map("last_commit")

  @@map("repositories")
}

model PersonalInfo {
  id          Int      @id @default(autoincrement())
  name        String
  title       String
  bio         String
  email       String
  phone       String?
  location    String?
  website     String?
  avatarUrl   String?  @map("avatar_url")
  githubUrl   String?  @map("github_url")
  linkedinUrl String?  @map("linkedin_url")
  twitterUrl  String?  @map("twitter_url")
  skills      String[] @default([])
  interests   String[] @default([])
  experience  Int      @default(0) // years of experience
  education   String?
  certifications String[] @default([])
  languages   String[] @default([])
  timezone    String?
  availability String?
  resumeUrl   String?  @map("resume_url")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("personal_info")
}
